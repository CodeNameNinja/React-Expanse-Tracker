{"version":3,"sources":["components/UI/Card.js","components/Expenses/ExpensesFilter/ExpensesFilter.js","components/Expenses/ExpenseDate.js","components/Expenses/ExpenseItem.js","components/Expenses/ExpensesList/ExpensesList.js","components/Chart/ChartBar.js","components/Chart/Chart.js","components/Expenses/ExpensesChart/ExpensesChart.js","components/Expenses/Expenses.js","components/NewExpense/ExpenseForm.js","components/NewExpense/NewExpense.js","App.js","reportWebVitals.js","index.js"],"names":["Card","props","classes","className","children","ExpensesFilter","value","filteredYear","onChange","event","onFilter","target","ExpenseDate","month","date","toLocaleString","year","day","ExpenseItem","amount","title","ExpensesList","expenses","length","map","expense","id","ChartBar","barFillHeight","maxValue","Math","round","style","height","label","Chart","dataPointValues","dataPoints","dataPoint","totalMaximum","max","ExpensesChart","chartDataPoints","getMonth","Expenses","useState","setFilteredYear","filteredExpenses","filter","items","getFullYear","toString","payload","ExpenseForm","enteredTitle","enteredAmount","enteredDate","userInput","setUserInput","onSubmit","preventDefault","expenseData","Date","onSave","type","prevState","min","step","onClick","onCancel","NewExpense","isEditing","setIsEditing","newExpenseContent","random","DATA","App","setExpenses","prevData","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"ybAOeA,EANF,SAACC,GACZ,IAAMC,EAAU,QAAUD,EAAME,UAEhC,OAAO,qBAAKA,UAAWD,EAAhB,SAA0BD,EAAMG,YCmB1BC,G,YAnBQ,SAACJ,GAItB,OACE,qBAAKE,UAAU,kBAAf,SACE,sBAAKA,UAAU,2BAAf,UACE,mDACA,yBAAQG,MAAOL,EAAMM,aAAcC,SAPxB,SAACC,GAChBR,EAAMS,SAASD,EAAME,OAAOL,QAMxB,UACE,wBAAQA,MAAM,OAAd,kBACA,wBAAQA,MAAM,OAAd,kBACA,wBAAQA,MAAM,OAAd,kBACA,wBAAQA,MAAM,OAAd,4BCFKM,G,kBAbK,SAACX,GACnB,IAAMY,EAAQZ,EAAMa,KAAKC,eAAe,QAAS,CAAEF,MAAO,SACpDG,EAAOf,EAAMa,KAAKC,eAAe,QAAS,CAAEC,KAAM,YAClDC,EAAMhB,EAAMa,KAAKC,eAAe,QAAS,CAAEE,IAAK,YACtD,OACE,sBAAKd,UAAU,eAAf,UACE,qBAAKA,UAAU,sBAAf,SAAsCU,IACtC,qBAAKV,UAAU,qBAAf,SAAqCa,IACrC,qBAAKb,UAAU,oBAAf,SAAoCc,SCW3BC,EAhBK,SAACjB,GAGnB,IAAMkB,EAASlB,EAAMkB,OAErB,OACE,eAAC,EAAD,CAAMhB,UAAU,eAAhB,UACE,cAAC,EAAD,CAAaW,KAAMb,EAAMa,OACzB,sBAAKX,UAAU,4BAAf,UACE,6BAAKF,EAAMmB,QACX,sBAAKjB,UAAU,sBAAf,cAAuCgB,YCYhCE,EAxBM,SAACpB,GAEpB,OAA8B,IAA1BA,EAAMqB,SAASC,OACV,oBAAIpB,UAAU,0BAAd,gCAGP,oBAAIA,UAAU,gBAAd,SAEKF,EAAMqB,SAASE,KAAI,SAACC,GACnB,OACE,cAAC,EAAD,CACEL,MAAOK,EAAQL,MACfD,OAAQM,EAAQN,OAChBL,KAAMW,EAAQX,MACTW,EAAQC,U,OCAZC,G,YAfE,SAAC1B,GAChB,IAAI2B,EAAgB,KAIpB,OAHI3B,EAAM4B,SAAW,IACjBD,EAAgBE,KAAKC,MAAO9B,EAAMK,MAAQL,EAAM4B,SAAY,KAAO,KAGrE,sBAAK1B,UAAU,WAAf,UACE,qBAAKA,UAAU,mBAAf,SACE,qBAAKA,UAAU,kBAAkB6B,MAAO,CAACC,OAAQL,OAEnD,qBAAKzB,UAAU,mBAAf,SAAmCF,EAAMiC,aCahCC,EAtBD,SAAClC,GACb,IAAMmC,EAAkBnC,EAAMoC,WAAWb,KAAI,SAACc,GAC5C,OAAOA,EAAUhC,SAEbiC,EAAeT,KAAKU,IAAL,MAAAV,KAAI,YAAQM,IAEjC,OACE,qBAAKjC,UAAU,QAAf,SACGF,EAAMoC,WAAWb,KAAI,SAACc,GACrB,OACE,cAAC,EAAD,CAEEhC,MAAOgC,EAAUhC,MACjBuB,SAAUU,EACVL,MAAOI,EAAUJ,OAHZI,EAAUJ,aCiBZO,EAzBO,SAACxC,GACnB,IAD6B,EACvByC,EAAkB,CACnB,CAACR,MAAO,MAAO5B,MAAO,GACtB,CAAC4B,MAAO,MAAO5B,MAAO,GACtB,CAAC4B,MAAO,MAAO5B,MAAO,GACtB,CAAC4B,MAAO,MAAO5B,MAAO,GACtB,CAAC4B,MAAO,MAAO5B,MAAO,GACtB,CAAC4B,MAAO,MAAO5B,MAAO,GACtB,CAAC4B,MAAO,MAAO5B,MAAO,GACtB,CAAC4B,MAAO,MAAO5B,MAAO,GACtB,CAAC4B,MAAO,MAAO5B,MAAO,GACtB,CAAC4B,MAAO,MAAO5B,MAAO,GACtB,CAAC4B,MAAO,MAAO5B,MAAO,GACtB,CAAC4B,MAAO,MAAO5B,MAAO,IAbE,cAgBRL,EAAMqB,UAhBE,IAgB7B,IAAI,EAAJ,qBAAoC,CAAC,IAA3BG,EAA0B,QAEhCiB,EADqBjB,EAAQX,KAAK6B,YACJrC,OAASmB,EAAQN,QAlBtB,8BAoB7B,OACI,cAAC,EAAD,CAAOkB,WAAcK,KCCdE,EApBE,SAAC3C,GAAW,IAAD,EACc4C,mBAAS,QADvB,mBACnBtC,EADmB,KACLuC,EADK,KAKpBC,EAAmB9C,EAAMqB,SAAS0B,QAAO,SAACC,GAC9C,OAAOA,EAAMnC,KAAKoC,cAAcC,aAAe5C,KAGjD,OACE,8BACE,eAAC,EAAD,CAAMJ,UAAU,WAAhB,UACE,cAAC,EAAD,CAAgBO,SAVP,SAAC0C,GACdN,EAAgBM,IASsB7C,aAAcA,IAChD,cAAC,EAAD,CAAee,SAAUyB,IACzB,cAAC,EAAD,CAAczB,SAAUyB,U,OC+DjBM,G,YAlFK,SAACpD,GAAW,IAAD,EACK4C,mBAAS,CACzCS,aAAc,GACdC,cAAe,GACfC,YAAa,KAJc,mBACtBC,EADsB,KACXC,EADW,KAyC7B,OACE,uBAAMC,SApBc,SAAClD,GACrBA,EAAMmD,iBACN,IAAMC,EAAc,CAClBzC,MAAOqC,EAAUH,aACjBnC,QAASsC,EAAUF,cACnBzC,KAAM,IAAIgD,KAAKL,EAAUD,cAE3BvD,EAAM8D,OAAOF,GACbH,GAAa,WACX,MAAO,CACLJ,aAAc,GACdC,cAAe,GACfC,YAAa,QAQjB,UACE,sBAAKrD,UAAU,wBAAf,UACE,sBAAKA,UAAU,uBAAf,UACE,0CACA,uBACE6D,KAAK,OACLxD,SA1CiB,SAACC,GAC1BiD,GAAa,SAACO,GACZ,OAAO,2BAAKA,GAAZ,IAAuBX,aAAc7C,EAAME,OAAOL,YAyC5CA,MAAOmD,EAAUH,kBAGrB,sBAAKnD,UAAU,uBAAf,UACE,2CACA,uBACE6D,KAAK,SACLE,IAAI,OACJC,KAAK,OACL3D,SA/CkB,SAACC,GAC3BiD,GAAa,SAACO,GACZ,OAAO,2BAAKA,GAAZ,IAAuBV,cAAe9C,EAAME,OAAOL,YA8C7CA,MAAOmD,EAAUF,mBAGrB,sBAAKpD,UAAU,uBAAf,UACE,yCACA,uBACE6D,KAAK,OACLE,IAAI,aACJ1B,IAAI,aACJhC,SApDgB,SAACC,GACzBiD,GAAa,SAACO,GACZ,OAAO,2BAAKA,GAAZ,IAAuBT,YAAa/C,EAAME,OAAOL,YAmD3CA,MAAOmD,EAAUD,oBAIvB,sBAAKrD,UAAU,uBAAf,UACE,wBAAQ6D,KAAK,SAASI,QAASnE,EAAMoE,SAArC,oBAGA,wBAAQL,KAAK,SAAb,iCCpDOM,EAxBI,SAACrE,GAClB,IAD4B,EAMM4C,oBAAS,GANf,mBAMrB0B,EANqB,KAMVC,EANU,KAaxBC,EACF,wBAAQL,QAPa,WACrBI,GAAa,IAMb,6BAGF,OAAO,sBAAKrE,UAAU,cAAf,WACDoE,GAAaE,EACdF,GAAa,cAAC,EAAD,CAAaR,OAlBX,SAACX,GACnB,IAAMS,EAAW,2BAAQT,GAAR,IAAiB1B,GAAII,KAAK4C,SAASvB,aACpDlD,EAAM8D,OAAOF,GACbW,GAAa,IAeqCH,SAT/B,WACnBG,GAAa,UCRXG,EAAO,CACX,CACEjD,GAAI,KACJN,MAAO,eACPD,OAAQ,MACRL,KAAM,IAAIgD,KAAK,KAAM,EAAG,KAE1B,CAAEpC,GAAI,KAAMN,MAAO,SAAUD,OAAQ,OAAQL,KAAM,IAAIgD,KAAK,KAAM,EAAG,KACrE,CACEpC,GAAI,KACJN,MAAO,gBACPD,OAAQ,OACRL,KAAM,IAAIgD,KAAK,KAAM,EAAG,KAE1B,CACEpC,GAAI,KACJN,MAAO,oBACPD,OAAQ,IACRL,KAAM,IAAIgD,KAAK,KAAM,EAAG,MAoBbc,EAjBH,WAAO,IAAD,EACgB/B,mBAAS8B,GADzB,mBACTrD,EADS,KACCuD,EADD,KAShB,OACE,gCACE,cAAC,EAAD,CAAYd,OARI,SAACX,GACnByB,GAAY,SAACC,GACX,MAAM,CAAE1B,GAAR,mBAAoB0B,UAOpB,cAAC,EAAD,CAAUxD,SAAUA,QC3BXyD,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.ecf1ad93.chunk.js","sourcesContent":["import \"./Card.css\";\nconst Card = (props) => {\n  const classes = \"card \" + props.className;\n\n  return <div className={classes}>{props.children}</div>;\n};\n\nexport default Card;\n","import React from 'react';\n\nimport './ExpensesFilter.css';\n\nconst ExpensesFilter = (props) => {\n  const onFilter = (event) => {\n    props.onFilter(event.target.value);\n  }\n  return (\n    <div className='expenses-filter'>\n      <div className='expenses-filter__control'>\n        <label>Filter by year</label>\n        <select value={props.filteredYear} onChange={onFilter}>\n          <option value='2022'>2022</option>\n          <option value='2021'>2021</option>\n          <option value='2020'>2020</option>\n          <option value='2019'>2019</option>\n        </select>\n      </div>\n    </div>\n  );\n};\n\nexport default ExpensesFilter;","import \"./ExpenseDate.css\";\nconst ExpenseDate = (props) => {\n  const month = props.date.toLocaleString(\"en-US\", { month: \"long\" });\n  const year = props.date.toLocaleString(\"en-US\", { year: \"numeric\" });\n  const day = props.date.toLocaleString(\"en-US\", { day: \"2-digit\" });\n  return (\n    <div className=\"expense-date\">\n      <div className=\"expense-date__month\">{month}</div>\n      <div className=\"expense-date__year\">{year}</div>\n      <div className=\"expense-date__day\">{day}</div>\n    </div>\n  );\n};\n\nexport default ExpenseDate;\n","import React from \"react\";\nimport \"./ExpenseItem.css\";\nimport ExpenseDate from \"./ExpenseDate\";\nimport Card from \"../UI/Card\";\nconst ExpenseItem = (props) => {\n  // const [title] = useState(props.title);\n\n  const amount = props.amount;\n\n  return (\n    <Card className=\"expense-item\">\n      <ExpenseDate date={props.date} />\n      <div className=\"expense-item__description\">\n        <h2>{props.title}</h2>\n        <div className=\"expense-item__price\">${amount}</div>\n      </div>\n    </Card>\n  );\n};\n\nexport default ExpenseItem;\n","import \"./ExpensesList.css\";\nimport ExpenseItem from \"../ExpenseItem\";\nconst ExpensesList = (props) => {\n\n  if (props.expenses.length === 0) {\n    return <h2 className=\"expenses-list__fallback\">Found no expenses.</h2>;\n  }\n  return (\n    <ul className=\"expenses-list\">\n      {\n        (props.expenses.map((expense) => {\n          return (\n            <ExpenseItem\n              title={expense.title}\n              amount={expense.amount}\n              date={expense.date}\n              key={expense.id}\n            />\n          );\n        }))\n      }\n    </ul>\n  );\n\n};\n\nexport default ExpensesList;\n","import \"./ChartBar.css\";\nconst ChartBar = (props) => {\n  let barFillHeight = \"0%\";\n  if (props.maxValue > 0) {\n      barFillHeight = Math.round((props.value / props.maxValue) * 100) + '%';\n  }\n  return (\n    <div className=\"chat-bar\">\n      <div className=\"chart-bar__inner\">\n        <div className=\"chart-bar__fill\" style={{height: barFillHeight}}></div>\n      </div>\n      <div className=\"chart-bar__label\">{props.label}</div>\n    </div>\n  );\n};\n\nexport default ChartBar;\n","import \"./Chart.css\";\nimport ChartBar from \"./ChartBar\";\nconst Chart = (props) => {\n  const dataPointValues = props.dataPoints.map((dataPoint) => {\n    return dataPoint.value;\n  });\n  const totalMaximum = Math.max(...dataPointValues);\n\n  return (\n    <div className=\"chart\">\n      {props.dataPoints.map((dataPoint) => {\n        return (\n          <ChartBar\n            key={dataPoint.label}\n            value={dataPoint.value}\n            maxValue={totalMaximum}\n            label={dataPoint.label}\n          />\n        );\n      })}\n    </div>\n  );\n};\n\nexport default Chart;\n","import React from 'react';\n\nimport Chart from \"../../Chart/Chart\";\n\n\nconst ExpensesChart = (props) => {\n    const chartDataPoints = [\n         {label: 'Jan', value: 0},\n         {label: 'Feb', value: 0},\n         {label: 'Mar', value: 0},\n         {label: 'Apr', value: 0},\n         {label: 'May', value: 0},\n         {label: 'Jun', value: 0},\n         {label: 'Jul', value: 0},\n         {label: 'Aug', value: 0},\n         {label: 'Sep', value: 0},\n         {label: 'Oct', value: 0},\n         {label: 'Nov', value: 0},\n         {label: 'Dec', value: 0},\n    ]\n\n    for(const expense of props.expenses){\n        const expenseMonth = expense.date.getMonth();\n        chartDataPoints[expenseMonth].value += expense.amount\n    }\n    return (\n        <Chart dataPoints = {chartDataPoints}/>\n    );  \n}\n\nexport default ExpensesChart;","import React, { useState } from \"react\";\nimport Card from \"../UI/Card\";\nimport \"./Expenses.css\";\n\nimport ExpensesFilter from \"./ExpensesFilter/ExpensesFilter\";\nimport ExpensesList from \"./ExpensesList/ExpensesList\"\nimport ExpensesChart from \"./ExpensesChart/ExpensesChart\"\nconst Expenses = (props) => {\n  const [filteredYear, setFilteredYear] = useState(\"2020\");\n  const filter = (payload) => {\n    setFilteredYear(payload);\n  };\n  const filteredExpenses = props.expenses.filter((items) => {\n    return items.date.getFullYear().toString() === filteredYear;\n  });\n\n  return (\n    <div>\n      <Card className=\"expenses\">\n        <ExpensesFilter onFilter={filter} filteredYear={filteredYear} />\n        <ExpensesChart expenses={filteredExpenses}/>\n        <ExpensesList expenses={filteredExpenses}/>\n      </Card>\n    </div>\n  );\n};\n\nexport default Expenses;\n","import React, { useState } from \"react\";\nimport \"./ExpenseForm.css\";\nconst ExpenseForm = (props) => {\n  const [userInput, setUserInput] = useState({\n    enteredTitle: \"\",\n    enteredAmount: \"\",\n    enteredDate: \"\",\n  });\n  const titleChangeHandler = (event) => {\n    setUserInput((prevState) => {\n      return { ...prevState, enteredTitle: event.target.value };\n    });\n  };\n  const amountChangeHandler = (event) => {\n    setUserInput((prevState) => {\n      return { ...prevState, enteredAmount: event.target.value };\n    });\n  };\n  const dateChangeHandler = (event) => {\n    setUserInput((prevState) => {\n      return { ...prevState, enteredDate: event.target.value };\n    });\n  };\n\n  const submitHandler = (event) => {\n    event.preventDefault();\n    const expenseData = {\n      title: userInput.enteredTitle,\n      amount: +userInput.enteredAmount,\n      date: new Date(userInput.enteredDate),\n    };\n    props.onSave(expenseData);\n    setUserInput(() => {\n      return {\n        enteredTitle: \"\",\n        enteredAmount: \"\",\n        enteredDate: \"\",\n      };\n    });\n    \n  };\n\n\n  return (\n    <form onSubmit={submitHandler}>\n      <div className=\"new-expense__controls\">\n        <div className=\"new-expense__control\">\n          <label>Title</label>\n          <input\n            type=\"text\"\n            onChange={titleChangeHandler}\n            value={userInput.enteredTitle}\n          />\n        </div>\n        <div className=\"new-expense__control\">\n          <label>Amount</label>\n          <input\n            type=\"number\"\n            min=\"0.01\"\n            step=\"0.01\"\n            onChange={amountChangeHandler}\n            value={userInput.enteredAmount}\n          />\n        </div>\n        <div className=\"new-expense__control\">\n          <label>Date</label>\n          <input\n            type=\"date\"\n            min=\"2019-01-01\"\n            max=\"2022-12-31\"\n            onChange={dateChangeHandler}\n            value={userInput.enteredDate}\n          />\n        </div>\n      </div>\n      <div className=\"new-expense__actions\">\n        <button type=\"button\" onClick={props.onCancel}>\n          Cancel\n        </button>\n        <button type=\"submit\">Add Expense</button>\n      </div>\n    </form>\n  );\n};\nexport default ExpenseForm;\n","import React, { useState } from \"react\";\nimport \"./NewExpense.css\";\nimport ExpenseForm from \"./ExpenseForm\";\nconst NewExpense = (props) => {\n  const saveHandler = (payload) => {\n    const expenseData = { ...payload, id: Math.random().toString() };\n    props.onSave(expenseData);\n    setIsEditing(false);\n  };\n  const [isEditing, setIsEditing] = useState(false);\n  const startIsEditing = () =>{\n    setIsEditing(true);\n  }\n  const endIsEditing = () =>{\n    setIsEditing(false);\n  }\n  let newExpenseContent = (\n    <button onClick={startIsEditing}>Add New Expense</button>\n  );\n\n  return <div className=\"new-expense\">\n      {!isEditing && newExpenseContent}\n      {isEditing && <ExpenseForm onSave={saveHandler} onCancel={endIsEditing}/>}\n      \n      </div>;\n};\n\nexport default NewExpense;\n","import React, { useState } from \"react\";\n\nimport \"./App.css\";\nimport Expenses from \"./components/Expenses/Expenses\";\nimport NewExpense from \"./components/NewExpense/NewExpense\";\n\nconst DATA = [\n  {\n    id: \"e1\",\n    title: \"Toilet Paper\",\n    amount: 94.12,\n    date: new Date(2020, 7, 14),\n  },\n  { id: \"e2\", title: \"New TV\", amount: 799.49, date: new Date(2021, 2, 12) },\n  {\n    id: \"e3\",\n    title: \"Car Insurance\",\n    amount: 294.67,\n    date: new Date(2021, 2, 28),\n  },\n  {\n    id: \"e4\",\n    title: \"New Desk (Wooden)\",\n    amount: 450,\n    date: new Date(2021, 5, 12),\n  },\n];\nconst App = () => {\n  const [expenses, setExpenses] = useState(DATA);\n\n  const saveExpense = (payload) => {\n    setExpenses((prevData) => {\n      return [payload, ...prevData];\n    });\n  };\n\n  return (\n    <div>\n      <NewExpense onSave={saveExpense} />\n      <Expenses expenses={expenses} />\n    </div>\n  );\n};\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}